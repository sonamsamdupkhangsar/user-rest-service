# Default values for mychart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  pullPolicy: Always

imagePullSecrets:
  - name: github-regcred
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
#  type: NodePort
  port: 80
  targetPort: 8080

istio:
  enabled: false

ingress:
  enabled: false
  ingressClass: nginx
  hosts:
    - host: user-rest-service.sonam.cloud
      paths:
        - path: /public
          pathType: Prefix
  tls:
    - secretName: sonam.cloud
      hosts:
        - "*.sonam.cloud"

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

postgres:
  port: "5432"
  service: user-minimal-cluster
  secretfile: sonam.user-minimal-cluster.credentials.postgresql.acid.zalan.do
  dbname: user

envs:
  - name: DB_SSLMODE
    value: REQUIRE
  - name: EUREKA_HOST
    value: discovery-service.sonam.cloud
  - name: AUTHENTICATION_REST_SERVICE
    value: http://authentication-rest-service
  - name: ACCOUNT_REST_SERVICE
    value: http://account-rest-service
  - name: DEFAULT_ZONE
    value: https://${EUREKA_USER}:${EUREKA_PASSWORD}@${EUREKA_HOST}/eureka
  - name: ISSUER_URL
    value: http://authorization-server:9001
  - name: OAUTH_CLIENTS
    value: oauth-client

health:
  liveness:
    path: /users/api/health/liveness
    port: 8080
    initialDelaySeconds: 10
    periodSeconds: 5
    failureThreshold: 5
  readiness:
    path: /users/api/health/readiness
    port: 8080
    initialDelaySeconds: 10
    periodSeconds: 5
    failureThreshold: 5

secretFiles:
  - file: eureka-discovery
    keys:
      - key: user
        name: EUREKA_USER
      - key: password
        name: EUREKA_PASSWORD
  - file: service-service-client-credential-flow-secret
    keys:
      - key: base64EncodedClientIdSecret
        name: BASE64_CLIENT_ID_SECRET
      - key: scopes
        name: REQUEST_SCOPES